/*
 * Copyright 2017 The Hyve
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'digital.wup:android-maven-publish:3.6.1'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply plugin: 'digital.wup.android-maven-publish'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName '0.1.0-SNAPSHOT'

        ndk {
            moduleName 'radar-android-audio'
        }
    }
    lintOptions {
        abortOnError false
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    libraryVariants.all { variant ->
        variant.outputs.all {
            if (variant.name == 'release') {
                outputFileName = "${archivesBaseName}-${android.defaultConfig.versionName}.aar"
            } else {
                outputFileName = "${archivesBaseName}-${android.defaultConfig.versionName}-${variant.name}.aar"
            }
        }
    }
    sourceSets {
        main {
            jniLibs.srcDir 'src/main/libs'
            jni.srcDirs = [] //disable automatic ndk-build call
        }
    }
    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

//---------------------------------------------------------------------------//
// Configuration                                                             //
//---------------------------------------------------------------------------//

group = 'org.radarcns'
ext.moduleName = 'radar-android-audio'
ext.moduleDescription = 'Audio phone sensor plugin for RADAR passive remote monitoring app'
ext.githubRepoName = 'RADAR-CNS/RADAR-Android-Audio'
version = android.defaultConfig.versionName

ext.githubUrl = 'https://github.com/' + githubRepoName + '.git'
ext.issueUrl = 'https://github.com/' + githubRepoName + '/issues'
ext.website = 'http://radar-cns.org'

//---------------------------------------------------------------------------//
// Sources and classpath configurations                                      //
//---------------------------------------------------------------------------//

repositories {
    google()
    jcenter()
}

dependencies {
    api 'org.radarcns:radar-commons-android:0.9.1'
    implementation 'org.radarcns:radar-schemas-commons:0.4.1'
    implementation 'org.apache.commons:commons-compress:1.16'

    testImplementation 'junit:junit:4.12'
    testRuntimeOnly 'org.slf4j:slf4j-simple:1.7.25'
}

//---------------------------------------------------------------------------//
// Build system metadata                                                     //
//---------------------------------------------------------------------------//

ext.sharedManifest = manifest {
    attributes("Implementation-Title": moduleName,
            "Implementation-Version": version)
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
    manifest.from sharedManifest
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.javaCompiler.classpath
        }
    }
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    exclude '**/R.java'
    exclude '**/BuildConfig.java'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    manifest.from sharedManifest
}
publishing {
    publications {
        mavenAar(MavenPublication) {
            from components.android
            artifact sourcesJar
            artifact javadocJar

            pom {
                description = moduleDescription
                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'blootsvoets'
                        name = 'Joris Borgdorff'
                        email = 'joris@thehyve.nl'
                        organization = 'The Hyve'
                    }
                    developer {
                        id = 'maximmoinat'
                        name = 'Maxim Moinat'
                        email = 'maxim@thehyve.nl'
                        organization = 'The Hyve'
                    }
                }
                issueManagement {
                    system = 'GitHub'
                    url = githubUrl + '/issues'
                }
                organization {
                    name = 'RADAR-base'
                    url = website
                }
                scm {
                    connection = 'scm:git:' + githubUrl
                    url = githubUrl
                }
            }
        }

    }
}


bintray {
    user project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    override false
    publications 'mavenAar'
    pkg {
        repo = project.group
        name = moduleName
        userOrg = 'radar-cns'
        desc = moduleDescription
        licenses = ['Apache-2.0']
        websiteUrl = website
        issueTrackerUrl = issueUrl
        vcsUrl = githubUrl
        githubRepo = githubRepoName
        githubReleaseNotesFile = 'README.md'
        version {
            name = project.version
            desc = moduleDescription
            vcsTag = System.getenv('TRAVIS_TAG')
            released = new Date()
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
            }
        }
    }
}

bintrayUpload.dependsOn 'assembleRelease'

wrapper {
    gradleVersion '4.10.2'
}
